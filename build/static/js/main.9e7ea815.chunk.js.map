{"version":3,"sources":["api/api.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","name","useState","data","setData","console","log","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","then","res","catch","error","className","Grid","container","spacing","item","xs","Alert","severity","map","msg","i","key","title","columns","field","hidden","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","market_name","push","companies","keywords","length","patch","_id","dataUpdate","tableData","window","location","reload","handleRowUpdate","onRowAdd","undefined","post","dataToAdd","handleRowAdd","onRowDelete","delete","dataDelete","index","x","filter","handleRowDelete","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9e7ea815.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n\t//baseURL: `https://reqres.in/api`,\r\n\tbaseURL: `http://localhost:3000`,\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport api from \"../api/api\";\r\n\r\nimport \"./table.css\";\r\n\r\nconst tableIcons = {\r\n\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\tDetailPanel: forwardRef((props, ref) => (\r\n\t\t<ChevronRight {...props} ref={ref} />\r\n\t)),\r\n\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\tPreviousPage: forwardRef((props, ref) => (\r\n\t\t<ChevronLeft {...props} ref={ref} />\r\n\t)),\r\n\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\tSortArrow: forwardRef((props, ref) => (\r\n\t\t<ArrowDownward {...props} ref={ref} />\r\n\t)),\r\n\tThirdStateCheck: forwardRef((props, ref) => (\r\n\t\t<Remove {...props} ref={ref} />\r\n\t)),\r\n\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n// function validateEmail(email) {\r\n// \tconst re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n// \treturn re.test(String(email).toLowerCase());\r\n// }\r\n\r\nfunction Table({ name }) {\r\n\tvar columns = [\r\n\t\t{ title: \"id\", field: \"id\", hidden: true },\r\n\t\t// {\r\n\t\t// \ttitle: \"Avatar\",\r\n\t\t// \trender: (rowData) => (\r\n\t\t// \t\t<Avatar\r\n\t\t// \t\t\tmaxInitials={1}\r\n\t\t// \t\t\tsize={40}\r\n\t\t// \t\t\tround={true}\r\n\t\t// \t\t\tname={rowData === undefined ? \" \" : rowData.first_name}\r\n\t\t// \t\t/>\r\n\t\t// \t),\r\n\t\t// },\r\n\t\t{ title: \"Market Name\", field: \"market_name\" },\r\n\t\t{ title: \"Companies\", field: \"companies\" },\r\n\t\t{ title: \"Keywords\", field: \"keywords\" },\r\n\t];\r\n\tconst [data, setData] = useState([]); //table data\r\n\r\n\tconsole.log(\"data\", data);\r\n\r\n\t//for error handling\r\n\tconst [iserror, setIserror] = useState(false);\r\n\tconst [errorMessages, setErrorMessages] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.get(\"/markets\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetData(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(\"Error\");\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst handleRowUpdate = (newData, oldData, resolve) => {\r\n\t\t//validation\r\n\t\tlet errorList = [];\r\n\t\tif (newData.market_name === \"\") {\r\n\t\t\terrorList.push(\"Please enter market name\");\r\n\t\t}\r\n\t\tif (newData.companies === \"\") {\r\n\t\t\terrorList.push(\"Please enter companies\");\r\n\t\t}\r\n\t\tif (\r\n\t\t\tnewData.keywords === \"\"\r\n\t\t\t//validateEmail(newData.keywords) === false\r\n\t\t) {\r\n\t\t\terrorList.push(\"Please enter valid keywords\");\r\n\t\t}\r\n\r\n\t\tif (errorList.length < 1) {\r\n\t\t\tapi.patch(\"/markets/\" + newData._id, newData)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconst dataUpdate = [...data];\r\n\t\t\t\t\tconst index = oldData.tableData._id;\r\n\t\t\t\t\tdataUpdate[index] = newData;\r\n\t\t\t\t\tsetData([...dataUpdate]);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t\twindow.location.reload(false);\r\n\t\t\t\t\tsetIserror(false);\r\n\t\t\t\t\tsetErrorMessages([]);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tsetErrorMessages([\"Update failed! Server error\"]);\r\n\t\t\t\t\tsetIserror(true);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetErrorMessages(errorList);\r\n\t\t\tsetIserror(true);\r\n\t\t\tresolve();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRowAdd = (newData, resolve) => {\r\n\t\t//validation\r\n\t\tlet errorList = [];\r\n\t\tif (newData.market_name === undefined) {\r\n\t\t\terrorList.push(\"Please enter market name\");\r\n\t\t}\r\n\t\tif (newData.companies === undefined) {\r\n\t\t\terrorList.push(\"Please enter companies\");\r\n\t\t}\r\n\t\tif (\r\n\t\t\tnewData.keywords === undefined\r\n\t\t\t//validateEmail(newData.email) === false\r\n\t\t) {\r\n\t\t\terrorList.push(\"Please enter keywords\");\r\n\t\t}\r\n\r\n\t\tif (errorList.length < 1) {\r\n\t\t\t//no error\r\n\t\t\tapi.post(\"/markets\", newData)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet dataToAdd = [...data];\r\n\t\t\t\t\tdataToAdd.push(newData);\r\n\t\t\t\t\tsetData(dataToAdd);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t\twindow.location.reload(false);\r\n\t\t\t\t\tsetErrorMessages([]);\r\n\t\t\t\t\tsetIserror(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tsetErrorMessages([\"Cannot add data. Server error!\"]);\r\n\t\t\t\t\tsetIserror(true);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetErrorMessages(errorList);\r\n\t\t\tsetIserror(true);\r\n\t\t\tresolve();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRowDelete = (oldData, resolve) => {\r\n\t\tapi.delete(\"/markets/\" + oldData._id)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst dataDelete = [...data];\r\n\t\t\t\tconst index = oldData.tableData._id;\r\n\t\t\t\tvar x = dataDelete.filter((item) => item._id !== index);\r\n\t\t\t\t//dataDelete.splice(index, 1);\r\n\t\t\t\tsetData([...x]);\r\n\t\t\t\tresolve();\r\n\t\t\t\twindow.location.reload(false);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessages([\"Delete failed! Server error\"]);\r\n\t\t\t\tsetIserror(true);\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"table\">\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t{/* <Grid item xs={3}></Grid> */}\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{iserror && (\r\n\t\t\t\t\t\t\t\t<Alert severity=\"error\">\r\n\t\t\t\t\t\t\t\t\t{errorMessages.map((msg, i) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <div key={i}>{msg}</div>;\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={name}\r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\ticons={tableIcons}\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\t\t\t\t\thandleRowUpdate(\r\n\t\t\t\t\t\t\t\t\t\t\tnewData,\r\n\t\t\t\t\t\t\t\t\t\t\toldData,\r\n\t\t\t\t\t\t\t\t\t\t\tresolve,\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowAdd: (newData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\t\t\t\t\thandleRowAdd(newData, resolve);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: (oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise((resolve) => {\r\n\t\t\t\t\t\t\t\t\t\thandleRowDelete(oldData, resolve);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{/* <Grid item xs={3}></Grid> */}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Table from \"./components/Table\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>Tables App</h1>\r\n\t\t\t<Table name={\"Market Table\"} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}